name: Build and Release

on:
  release:
    types: [created]

jobs:
  build_linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - i686-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - powerpc64le-unknown-linux-gnu
          - riscv64gc-unknown-linux-gnu
          - s390x-unknown-linux-gnu
          - x86_64-unknown-freebsd
          - x86_64-unknown-illumos
          - armv7-unknown-linux-gnueabihf

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-multilib

      - name: Build
        run: |
          cargo install cross
          cross build --release --target ${{ matrix.target }}

      - name: Archive binary
        run: |
          mkdir -p artifacts/${{ matrix.target }}
          cp target/${{ matrix.target }}/release/swu_network_custom_login artifacts/${{ matrix.target }}/
          cd artifacts/${{ matrix.target }}
          tar -czvf ../../${{ matrix.target }}.tar.gz *
          cd ../../

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: ${{ matrix.target }}.tar.gz

  build_macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        run: rustup target add ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Archive binary
        run: |
          mkdir -p artifacts/${{ matrix.target }}
          cp target/${{ matrix.target }}/release/swu_network_custom_login artifacts/${{ matrix.target }}/
          cd artifacts/${{ matrix.target }}
          tar -czvf ../../${{ matrix.target }}.tar.gz *
          cd ../../

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: ${{ matrix.target }}.tar.gz

  build_windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-pc-windows-msvc
          - i686-pc-windows-msvc
          - aarch64-pc-windows-msvc
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Archive binary
        shell: pwsh
        run: |
          New-Item -Path "artifacts" -ItemType Directory -Force
          New-Item -Path "artifacts/${{ matrix.target }}" -ItemType Directory -Force
      
          if (${{ matrix.target }} -like "*windows*") {
            Copy-Item "target/${{ matrix.target }}/release/swu_network_custom_login.exe" -Destination "artifacts/${{ matrix.target }}/"

            Compress-Archive -Path "artifacts/${{ matrix.target }}/*" -DestinationPath "${{ matrix.target }}.zip"
          } else {

            Copy-Item "target/${{ matrix.target }}/release/swu_network_custom_login" -Destination "artifacts/${{ matrix.target }}/"
            
            tar -czvf "${{ matrix.target }}.tar.gz" -C "artifacts/${{ matrix.target }}" .
          }

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: ${{ matrix.target }}.tar.gz

  release:
    needs:
      - build_linux
      - build_macos
      - build_windows
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "artifacts/**/*.tar.gz"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          name: Release ${{ github.ref }}
          draft: false
          replacesArtifacts: true
          prerelease: false
